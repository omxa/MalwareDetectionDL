from flask import Flask, request, render_template
from pe_main import extract_pe_features
import pickle
import os

app = Flask(__name__)

# Loading the PE model and features
pe_classifier_path = '/Users/omar/Desktop/app_repos/Classifier/pe_classifier.pkl'
pe_features_path = '/Users/omar/Desktop/app_repos/Classifier/pe_features.pkl'

with open(pe_classifier_path, 'rb') as f:
    pe_classifier = pickle.load(f)

with open(pe_features_path, 'rb') as f:
    pe_features = pickle.load(f)
    
# Loading the URL model and vectorizer
url_model_path = '/Users/omar/Desktop/app_repos/Classifier/url_model.pkl'
url_vector_path = '/Users/omar/Desktop/app_repos/Classifier/url_vector.pkl'

with open(url_model_path, 'rb') as file:
    url_model = pickle.load(file)

with open(url_vector_path, 'rb') as file:
    url_vector = pickle.load(file)

# Flask application routines
@app.route('/')
def index():
    return render_template('index.html')

@app.route('/predict_pe', methods=['POST'])
def predict_pe():
    file = request.files['pe_file']
    if file:
        file_path = os.path.join('uploads', file.filename)
        file.save(file_path)
        
        features = extract_pe_features(file_path)

        pe_features = [features[key] for key in features]
       
        result = pe_classifier.predict([pe_features])[0]

    else:
        result = "No file uploaded"
    
    if result == 1:
         return render_template('result.html', result='The uploaded .exe file '+' is safe to use.')
    elif result == 0:
         return render_template('result.html', result='The uploaded .exe file '+' is malicious')
    else:
         return render_template('result.html', result=result)

@app.route('/predict_url', methods=['POST'])
def predict_url():
    url = request.form['url']
    if url:
        vectorized_url = url_vector.transform([url])
        result = url_model.predict(vectorized_url)[0]
    else:
        result = "No URL provided"

    if result == 'bad':
        return render_template('result.html', result='The entered url '+url+' maybe malicious.')
    elif result == 'good':
        return render_template('result.html', result='The entered URL '+url+' is safe to use.')
    else:
        return render_template('result.html', result='An error occurred while processing the URL.')
    
    
    #return render_template('result.html', result=result)

if __name__ == '__main__':
    app.run(debug=True)